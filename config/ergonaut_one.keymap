#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV 1
#define MOUSE 2
#define MEDIA 3
#define NUM 4
#define SYM 5
#define FUN 6
#define ADJ 7

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

&caps_word {
    /delete-property/ ignore-modifiers;

    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE LSHFT RSHFT>;
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        hmr: homerow_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: homerow_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        capsword {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };

        excl {
            bindings = <&kp EXCL>;
            key-positions = <13 25>;
            layers = <0>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <14 26>;
            layers = <0>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <27 15>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
            layers = <0>;
        };

        pct {
            bindings = <&kp PERCENT>;
            key-positions = <21 33>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <22 34>;
            layers = <0>;
        };

        amps {
            bindings = <&kp AMPS>;
            key-positions = <19 31>;
            layers = <0>;
        };

        star {
            bindings = <&kp ASTRK>;
            key-positions = <20 32>;
            layers = <0>;
        };

        l-adjust {
            bindings = <&mo 5>;
            key-positions = <36 38>;
            layers = <0>;
        };

        r-adjust {
            bindings = <&mo 5>;
            key-positions = <39 41>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home_layer {
            bindings = <
&kp BACKSLASH  &kp Q         &kp W        &kp E        &kp R         &kp T    &kp Y      &kp U         &kp I        &kp O        &kp P            &kp LBKT
&kp EQUAL      &hml LCTRL A  &hml LALT S  &hml LGUI D  &hml LSHFT F  &kp G    &kp H      &hmr RSHFT J  &hmr RGUI K  &hmr RALT L  &hmr RCTRL SEMI  &kp SQT
&kp MINUS      &kp Z         &kp X        &kp C        &kp V         &kp B    &kp N      &kp M         &kp COMMA    &kp DOT      &kp FSLH         &kp RBKT
                                          &lt 2 ESC    &lt 1 SPACE   &kp TAB  &kp ENTER  &lt 3 BSPC    &lt 4 DEL
            >;
        };

        extra_layer {
            bindings = <
&none  &none      &none     &none     &none      &none  &none     &none      &none      &none      &none      &kp LPAR
&none  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp TILDE  &kp GRAVE
&none  &none      &none     &none     &none      &none  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none      &kp RPAR
                            &none     &none      &none  &kp RET   &kp BSPC   &kp DEL
            >;
        };

        media_layer {
            bindings = <
&none  &none      &none     &none     &none      &none  &kp LG(LS(LC(N3)))  &kp LS(LG(LC(N4)))  &kp C_BRI_DN  &kp C_BRI_UP  &none       &none
&none  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none  &none               &kp C_PREV          &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none
&none  &none      &none     &none     &none      &none  &kp LS(LG(N3))      &kp LG(LS(N4))      &none         &none         &none       &none
                            &none     &none      &none  &kp C_STOP          &kp C_PP            &kp K_MUTE
            >;
        };

        num_layer {
            bindings = <
&none  &none   &kp N7  &kp N8   &kp N9     &none    &none  &none      &none     &none     &none      &none
&none  &kp N0  &kp N4  &kp N5   &kp N6     &none    &none  &kp RSHFT  &kp RGUI  &kp LALT  &kp RCTRL  &none
&none  &none   &kp N1  &kp N2   &kp N3     &none    &none  &none      &none     &none     &none      &none
                       &kp ESC  &kp SPACE  &kp TAB  &none  &none      &none
            >;
        };

        fkey_layer {
            bindings = <
&none  &none  &kp F7  &kp F8   &kp F9     &kp F12  &none  &none      &none     &none     &none      &none
&none  &none  &kp F4  &kp F5   &kp F6     &kp F11  &none  &kp LSHFT  &kp RGUI  &kp LALT  &kp RCTRL  &none
&none  &none  &kp F1  &kp F2   &kp F3     &kp F10  &none  &none      &none     &none     &none      &none
                      &kp ESC  &kp SPACE  &kp TAB  &none  &none      &none
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &kp LG(LC(Q))  &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &out OUT_TOG  &out OUT_BLE  &out OUT_USB  &none         &none          &none         &none         &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &sys_reset
                                         &trans        &trans        &trans         &trans        &trans        &trans
            >;
        };
    };
};
